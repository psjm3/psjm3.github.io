/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.7.1
 */
import { r as registerInstance, h, g as getElement } from './index-28d8549d.js';
import { c as connectInteractive, d as disconnectInteractive, u as updateHostInteraction, I as InteractiveContainer } from './interactive-583e13d7.js';
import './browser-1baf23f7.js';

const CSS = {
    container: "container",
    content: "content",
    contentContainer: "content-container",
    description: "description",
    heading: "heading",
    largeVisual: "large-visual",
};
const SLOTS = {
    contentBottom: "content-bottom",
    contentEnd: "content-end",
    contentStart: "content-start",
    contentTop: "content-top",
};

const tileCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{--calcite-tile-background-color:var(--calcite-color-foreground-1);--calcite-tile-border-color:var(--calcite-color-border-2);--calcite-tile-description-text-color:var(--calcite-color-text-3);--calcite-tile-heading-text-color:var(--calcite-color-text-2);box-sizing:border-box;display:inline-block;max-inline-size:460px;min-inline-size:140px}:host .container{align-items:flex-start;background-color:var(--calcite-tile-background-color);block-size:var(--calcite-container-size-content-fluid);box-sizing:border-box;display:flex;flex-direction:column;gap:var(--calcite-spacing-md);inline-size:var(--calcite-container-size-content-fluid);pointer-events:none;transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-user-select:none;user-select:none}:host .content-container{display:flex;gap:var(--calcite-spacing-md);inline-size:100%;outline-color:transparent;padding:0}:host .content{display:flex;flex-direction:column}:host .heading{color:var(--calcite-tile-heading-text-color);font-size:var(--calcite-font-size--1);font-weight:var(--calcite-font-weight-medium);line-height:1.20313rem;overflow-wrap:break-word}:host .large-visual{align-items:center;justify-content:center;min-block-size:12rem;text-align:center}:host .large-visual calcite-icon{block-size:64px;inline-size:64px}:host .large-visual .content-container{justify-content:center}:host .description{color:var(--calcite-tile-description-text-color);font-size:var(--calcite-font-size--2);font-weight:var(--calcite-font-weight-regular);line-height:1.03125rem;overflow-wrap:break-word}:host([alignment=center]) .container{align-items:center;text-align:center}:host([alignment=center]) slot[name=content-start]::slotted(*),:host([alignment=center]) slot[name=content-end]::slotted(*){align-self:center}:host([scale=s]){max-inline-size:400px;min-inline-size:100px}:host([scale=s]) .container,:host([scale=s]) .content-container{gap:var(--calcite-spacing-sm)}:host([scale=s]) .heading{font-size:var(--calcite-font-size--2);line-height:1.03125rem}:host([scale=s]) .description{font-size:var(--calcite-font-size--3);line-height:0.85938rem}:host([scale=l]){max-inline-size:520px;min-inline-size:160px}:host([scale=l]) .container,:host([scale=l]) .content-container{gap:var(--calcite-spacing-xl)}:host([scale=l]) .heading{font-size:var(--calcite-font-size-0);line-height:1.375rem}:host([scale=l]) .description{font-size:var(--calcite-font-size--1);line-height:1.20313rem}:host(:not([href])){--calcite-ui-icon-color:var(--calcite-color-text-3)}:host([href]),:host([href]:hover){--calcite-tile-heading-text-color:var(--calcite-color-text-link)}:host([href]) .heading,:host([href]:hover) .heading{text-decoration-line:underline}:host(:not([embed])) .container{box-shadow:0 0 0 1px var(--calcite-tile-border-color);padding:var(--calcite-spacing-md)}:host(:not([embed])[scale=s]) .container{padding:var(--calcite-spacing-sm)}:host(:not([embed])[scale=l]) .container{padding:var(--calcite-spacing-xl)}:host(:not([embed])[href]:hover),:host(:not([embed])[href]:focus){--calcite-tile-border-color:var(--calcite-color-brand)}:host(:not([embed])[href]:hover) .container,:host(:not([embed])[href]:focus) .container{box-shadow:0 0 0 2px var(--calcite-tile-border-color);cursor:pointer;position:relative;z-index:var(--calcite-z-index)}:host(:not([embed])[href]:active){--calcite-tile-border-color:var(--calcite-color-brand)}:host(:not([embed])[href]:active) .container{box-shadow:0 0 0 3px var(--calcite-tile-border-color)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host(:hover),:host([active]){--calcite-tile-description-text-color:var(--calcite-color-text-2);--calcite-tile-heading-text-color:var(--calcite-color-text-1)}:host([hidden]){display:none}[hidden]{display:none}";

const Tile = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.active = false;
        this.alignment = "start";
        this.description = undefined;
        this.disabled = false;
        this.embed = false;
        this.focused = false;
        this.heading = undefined;
        this.href = undefined;
        this.icon = undefined;
        this.iconFlipRtl = false;
        this.scale = "m";
    }
    // --------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    // --------------------------------------------------------------------------
    connectedCallback() {
        connectInteractive(this);
    }
    disconnectedCallback() {
        disconnectInteractive(this);
    }
    componentDidRender() {
        updateHostInteraction(this);
    }
    // --------------------------------------------------------------------------
    //
    //  Render Methods
    //
    // --------------------------------------------------------------------------
    renderTile() {
        const { icon, heading, description, iconFlipRtl } = this;
        const isLargeVisual = heading && icon && !description;
        return (h("div", { class: { [CSS.container]: true, [CSS.largeVisual]: isLargeVisual } }, h("slot", { name: SLOTS.contentTop }), icon && h("calcite-icon", { flipRtl: iconFlipRtl, icon: icon, scale: "l" }), h("div", { class: CSS.contentContainer }, h("slot", { name: SLOTS.contentStart }), h("div", { class: CSS.content }, heading && h("div", { class: CSS.heading }, heading), description && h("div", { class: CSS.description }, description)), h("slot", { name: SLOTS.contentEnd })), h("slot", { name: SLOTS.contentBottom })));
    }
    render() {
        const { disabled } = this;
        return (h(InteractiveContainer, { disabled: disabled }, this.href ? (h("calcite-link", { disabled: disabled, href: this.href }, this.renderTile())) : (this.renderTile())));
    }
    get el() { return getElement(this); }
};
Tile.style = tileCss;

export { Tile as calcite_tile };

//# sourceMappingURL=calcite-tile.entry.js.map