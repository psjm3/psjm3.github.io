{"version":3,"names":["ComboboxItem","ComboboxItemGroup","ComboboxChildSelector","CSS","chipInvisible","selectionDisplayFit","selectionDisplaySingle","listContainer","getAncestors","element","parent","parentElement","closest","grandparent","filter","el","getItemAncestors","item","ancestors","nodeName","getItemChildren","nodeListToArray","querySelectorAll","hasActiveChildren","node","items","selected","length","getDepth","result","document","evaluate","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","isSingleLike","selectionMode","includes","button","XButton","disabled","key","label","onClick","ref","scale","h","class","tabIndex","type","icon","getIconScale","comboboxCss","isGroup","tagName","itemUidPrefix","chipUidPrefix","labelUidPrefix","listboxUidPrefix","inputUidPrefix","Combobox","this","placement","defaultMenuPlacement","internalValueChangeFlag","textInput","mutationObserver","createObserver","updateItems","resizeObserver","setMaxScrollerHeight","refreshSelectionDisplay","guid","inputHeight","ignoreSelectedEventsFlag","openTransitionProp","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterComputedPlacements","getValue","selectedItems","map","value","toString","onLabelClick","setFocus","keyDownHandler","event","activeChipIndex","activeItemIndex","allowCustomValues","text","addCustomChip","preventDefault","open","clearInputValue","filterItems","updateActiveItemIndex","previousChip","nextChip","shiftActiveItemIndex","comboboxInViewport","scrollIntoView","ensureRecentSelectedItemIsActive","defaultPrevented","scrollToActiveItem","filteredItems","clearDisabled","clearValue","toggleSelection","removeActiveChip","submitForm","notDeletable","selectionDisplay","selectedHiddenChipsCount","isMulti","removeLastChip","toggleCloseEnd","removeEventListener","toggleOpenEnd","async","listContainerEl","referenceEl","reposition","maxScrollerHeight","getMaxScrollerHeight","style","maxHeight","minWidth","clientWidth","calciteChipCloseHandler","comboboxItem","selection","find","calciteComboboxChipClose","emit","clickHandler","composedPath","some","classList","contains","XButtonCSS","componentLoaded","allSelectedIndicatorChipEl","chipContainerEl","placeholder","selectedIndicatorChipEl","chipContainerElGap","parseInt","getComputedStyle","gap","replace","chipContainerElWidth","getElementWidth","fontSize","fontFamily","inputTextWidth","getTextWidth","inputWidth","calciteSize48","allSelectedIndicatorChipElWidth","selectedIndicatorChipElWidth","largestSelectedIndicatorChipWidth","Math","max","setCompactSelectionDisplay","chipEls","Array","from","shadowRoot","chipEl","closable","availableHorizontalChipElSpace","round","refreshChipDisplay","setVisibleAndHiddenChips","setFloatingEl","floatingEl","connectFloatingUI","setContainerEl","observe","transitionEl","setChipContainerEl","setReferenceEl","setAllSelectedIndicatorChipEl","setSelectedIndicatorChipEl","inputHandler","target","filteredData","textLabel","debounce","data","itemsAndGroups","getItemsAndGroups","forEach","hidden","ancestor","getFilteredItems","calciteComboboxFilterChange","internalComboboxChangeEvent","calciteComboboxChange","emitComboboxChange","getSelectedItems","match","sort","a","b","aIdx","indexOf","bIdx","getItems","groupItems","getGroupItems","getData","needsIcon","getNeedsIcon","groupItem","index","afterEmptyGroup","nextGroupItem","children","activeItem","height","calculateSingleItemHeight","offsetHeight","scrollTop","offsetTop","comboboxFocusHandler","focus","openHandler","onToggleOpenCloseComponent","handleDisabledChange","maxItemsHandler","overlayPositioningHandler","handlePropsChange","valueHandler","isArray","onMessagesChange","flipPlacementsHandler","selectedItemsHandler","documentClickHandler","trim","calciteComboboxItemChangeHandler","newIndex","delayed","overlayPositioning","componentFocusable","connectedCallback","connectInteractive","connectLocalized","connectMessages","connectLabel","connectForm","childList","subtree","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","afterConnectDefaultValueSet","setComponentLoaded","componentDidRender","updateHostInteraction","componentDidUpdate","disconnectedCallback","disconnect","disconnectInteractive","disconnectLabel","disconnectForm","disconnectFloatingUI","disconnectLocalized","disconnectMessages","textHandler","effectiveLocaleChange","updateMessages","effectiveLocale","resetText","bounding","getBoundingClientRect","top","left","right","window","innerWidth","documentElement","bottom","innerHeight","clientHeight","onBeforeOpen","calciteComboboxBeforeOpen","onOpen","calciteComboboxOpen","onBeforeClose","calciteComboboxBeforeClose","onClose","calciteComboboxClose","targetIndex","hideChip","add","showChip","remove","chipElWidth","newCompactBreakpoint","maxCompactBreakpoint","compactSelectionDisplay","newSelectedVisibleChipsCount","selectedVisibleChipsCount","newSelectedHiddenChipsCount","maxItems","itemsToProcess","child","updateAncestors","filterDisabled","existingItem","createElement","appendChild","active","focusChip","last","chip","querySelector","delta","activeDescendant","i","isAllSelected","renderChips","messages","chipClasses","reverse","pathLabel","join","iconFlipRtl","id","messageOverrides","dismissLabel","removeTag","onCalciteChipClose","title","renderAllSelectedIndicatorChip","allSelected","renderAllSelectedIndicatorChipCompact","all","renderSelectedIndicatorChip","selectedItemsCount","renderSelectedIndicatorChipCompact","showingInlineIcon","placeholderIcon","selectedItem","selectedIcon","singleSelectionMode","renderInput","single","showLabel","getLabelText","input","onFocus","onInput","renderListBoxOptions","toAriaBoolean","role","tabindex","renderFloatingUIContainer","classes","FloatingCSS","animation","animationActive","list","renderSelectedOrPlaceholderIcon","placeholderIconFlipRtl","flipRtl","renderChevronIcon","render","allSelectionDisplay","singleSelectionDisplay","fitSelectionDisplay","isClearable","Host","InteractiveContainer","wrapper","onKeyDown","htmlFor","clear","HiddenFormInputSlot","component","validationMessage","status","Validation","validationIcon","message","iconActive","iconIndent","custom","dot","textContainer","comboboxItemCss","itemClickHandler","toggleSelected","selectedWatchHandler","calciteComboboxItemChange","connectConditionalSlotComponent","disconnectConditionalSlotComponent","isSinglePersistSelect","renderIcon","iconPath","renderSelectIndicator","showDot","renderChildren","getSlotted","isSingleSelect","defaultIcon","depth","comboboxItemGroupCss"],"sources":["src/components/combobox/resources.ts","src/components/combobox/utils.ts","src/components/functional/XButton.tsx","src/components/combobox/combobox.scss?tag=calcite-combobox&encapsulation=shadow","src/components/combobox/combobox.tsx","src/components/combobox-item/resources.ts","src/components/combobox-item/combobox-item.scss?tag=calcite-combobox-item&encapsulation=shadow","src/components/combobox-item/combobox-item.tsx","src/components/combobox-item-group/resources.ts","src/components/combobox-item-group/combobox-item-group.scss?tag=calcite-combobox-item-group&encapsulation=shadow","src/components/combobox-item-group/combobox-item-group.tsx"],"sourcesContent":["export const ComboboxItem = \"CALCITE-COMBOBOX-ITEM\";\nexport const ComboboxItemGroup = \"CALCITE-COMBOBOX-ITEM-GROUP\";\nexport const ComboboxChildSelector = `${ComboboxItem}, ${ComboboxItemGroup}`;\n\nexport const CSS = {\n  chipInvisible: \"chip--invisible\",\n  selectionDisplayFit: \"selection-display-fit\",\n  selectionDisplaySingle: \"selection-display-single\",\n  listContainer: \"list-container\",\n};\n","import { nodeListToArray } from \"../../utils/dom\";\nimport { ComboboxChildElement } from \"./interfaces\";\nimport { ComboboxChildSelector } from \"./resources\";\nimport { Build } from \"@stencil/core\";\nimport { Combobox } from \"./combobox\";\n\nexport function getAncestors(element: HTMLElement): ComboboxChildElement[] {\n  const parent: ComboboxChildElement = element.parentElement?.closest(ComboboxChildSelector);\n  const grandparent: ComboboxChildElement = parent?.parentElement?.closest(ComboboxChildSelector);\n  return [parent, grandparent].filter((el) => el);\n}\n\nexport function getItemAncestors(item: HTMLCalciteComboboxItemElement): HTMLCalciteComboboxItemElement[] {\n  return (\n    (item.ancestors?.filter((el) => el.nodeName === \"CALCITE-COMBOBOX-ITEM\") as HTMLCalciteComboboxItemElement[]) || []\n  );\n}\n\nexport function getItemChildren(item: HTMLCalciteComboboxItemElement): HTMLCalciteComboboxItemElement[] {\n  return nodeListToArray(item.querySelectorAll(\"calcite-combobox-item\"));\n}\n\nexport function hasActiveChildren(node: HTMLCalciteComboboxItemElement): boolean {\n  const items = nodeListToArray(node.querySelectorAll(\"calcite-combobox-item\"));\n  return items.filter((item) => item.selected).length > 0;\n}\n\nexport function getDepth(element: HTMLElement): number {\n  if (!Build.isBrowser) {\n    return 0;\n  }\n\n  const result = document.evaluate(\n    \"ancestor::calcite-combobox-item | ancestor::calcite-combobox-item-group\",\n    element,\n    null,\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null,\n  );\n\n  return result.snapshotLength;\n}\n\nexport function isSingleLike(selectionMode: Combobox[\"selectionMode\"]): boolean {\n  return selectionMode.includes(\"single\");\n}\n","import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXAttributes, JSXBase } from \"@stencil/core/internal\";\nimport { Scale } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\n\nexport interface XButtonOptions extends JSXAttributes {\n  disabled: boolean;\n  label: string;\n  scale: Scale;\n  onClick?: JSXBase.DOMAttributes<HTMLElement>[\"onClick\"];\n}\n\nexport const CSS = {\n  button: \"x-button\",\n};\n\nexport function XButton({\n  disabled,\n  key,\n  label,\n  onClick,\n  ref,\n  scale,\n}: XButtonOptions): FunctionalComponent {\n  return (\n    <button\n      aria-label={label}\n      class={CSS.button}\n      disabled={disabled}\n      key={key}\n      onClick={onClick}\n      tabIndex={-1}\n      type=\"button\"\n      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n      ref={ref}\n    >\n      <calcite-icon icon=\"x\" scale={getIconScale(scale)} />\n    </button>\n  );\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-combobox-input-height: Specifies the height of the component's input.\n */\n\n:host {\n  @apply relative block;\n}\n\n@include disabled();\n@include xButton();\n\n:host([scale=\"s\"]) {\n  @apply text-n2;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.1\");\n  --calcite-combobox-input-height: theme(\"spacing.4\");\n  --calcite-internal-combobox-input-margin-block: calc(theme(\"spacing.1\") - theme(\"borderWidth.DEFAULT\"));\n\n  .x-button {\n    margin-inline: theme(\"spacing.2\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n1;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.2\");\n  --calcite-combobox-input-height: theme(\"spacing.4\");\n  --calcite-internal-combobox-input-margin-block: calc(theme(\"spacing.2\") - theme(\"borderWidth.DEFAULT\"));\n\n  .x-button {\n    margin-inline-end: theme(\"spacing.3\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.4\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.3\");\n  --calcite-combobox-input-height: theme(\"spacing.6\");\n  --calcite-internal-combobox-input-margin-block: calc(theme(\"spacing[2.5]\") - theme(\"borderWidth.DEFAULT\"));\n\n  .x-button {\n    margin-inline-end: theme(\"spacing.4\");\n  }\n}\n\n.wrapper {\n  @apply bg-foreground-1\n    text-color-1\n    focus-base\n    flex\n    border-color-input\n    border\n    border-solid;\n  padding-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n:host(:focus-within) .wrapper,\n.wrapper--active {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) .wrapper {\n  @apply border-color-danger;\n}\n\n:host([status=\"invalid\"]:focus-within) .wrapper {\n  @apply focus-inset-danger;\n}\n\n.wrapper--single {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n  @apply cursor-pointer flex-nowrap;\n}\n\n.grid-input {\n  @apply flex\n    flex-grow\n    flex-wrap\n    items-center\n    relative\n    truncate\n    p-0;\n\n  gap: var(--calcite-combobox-item-spacing-unit-s);\n  margin-inline-end: var(--calcite-combobox-item-spacing-unit-s);\n\n  &.selection-display-fit,\n  &.selection-display-single {\n    @apply flex-nowrap overflow-hidden;\n  }\n}\n\n.input {\n  @apply appearance-none\n  bg-transparent\n  border-none\n  flex-grow\n  font-inherit\n  text-color-1\n  text-ellipsis\n  overflow-hidden\n  p-0;\n  font-size: inherit;\n  block-size: var(--calcite-combobox-input-height);\n  line-height: var(--calcite-combobox-input-height);\n  inline-size: 100%;\n  margin-block-end: var(--calcite-combobox-item-spacing-unit-s);\n  min-inline-size: 4.8125rem;\n  &:focus {\n    @apply outline-none;\n  }\n\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\n\n.input--transparent {\n  @apply opacity-0;\n}\n\n.input--single {\n  @apply p-0;\n  margin-block: var(--calcite-internal-combobox-input-margin-block);\n}\n\n.wrapper--active .input-single {\n  @apply cursor-text;\n}\n\n.input--hidden {\n  @apply pointer-events-none\n  w-0\n  min-w-0\n  opacity-0;\n}\n\n.input--icon {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.input-wrap {\n  @apply flex flex-grow items-center;\n}\n\n.input-wrap--single {\n  @apply flex-1 overflow-hidden;\n}\n\n.label {\n  @apply pointer-events-none\n    max-w-full\n    flex-auto\n    truncate\n    p-0\n    font-normal;\n  block-size: var(--calcite-combobox-input-height);\n  line-height: var(--calcite-combobox-input-height);\n}\n\n.label--icon {\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.icon-end,\n.icon-start {\n  @apply flex cursor-pointer items-center;\n}\n\n.icon-end {\n  @apply flex-none;\n}\n\n.floating-ui-container {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floatingUIContainer();\n  @include floatingUIWrapper();\n}\n\n@include floatingUIElemAnim(\".floating-ui-container\");\n\n.floating-ui-container--active {\n  @include floatingUIWrapperActive();\n}\n\n@media (forced-colors: active) {\n  .wrapper,\n  .floating-ui-container--active {\n    border: 1px solid canvasText;\n  }\n}\n\n.screen-readers-only {\n  @apply sr-only;\n}\n\n.list-container {\n  @apply bg-foreground-1\n    max-h-menu\n    overflow-y-auto;\n  inline-size: var(--calcite-dropdown-width);\n}\n\n.list {\n  @apply m-0 block p-0;\n}\n\n.list--hide {\n  @apply h-0 overflow-hidden;\n}\n\ncalcite-chip {\n  --calcite-animation-timing: 0;\n}\n\n.chip {\n  margin-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);\n  max-inline-size: 100%;\n}\n\n.chip--active {\n  @apply bg-foreground-3;\n}\n\n.chip--invisible {\n  @apply absolute invisible;\n}\n\n.item {\n  @apply block;\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n\n::slotted(calcite-combobox-item-group:not(:first-child)) {\n  padding-block-start: var(--calcite-combobox-item-spacing-unit-l);\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport { filter } from \"../../utils/filter\";\n\nimport { getElementWidth, getTextWidth, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  EffectivePlacement,\n  filterComputedPlacements,\n  FloatingCSS,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  submitForm,\n} from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  componentLoaded,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale, SelectionMode, Status } from \"../interfaces\";\nimport { ComboboxMessages } from \"./assets/combobox/t9n\";\nimport { ComboboxChildElement, SelectionDisplay } from \"./interfaces\";\nimport { ComboboxChildSelector, ComboboxItem, ComboboxItemGroup, CSS } from \"./resources\";\nimport { getItemAncestors, getItemChildren, hasActiveChildren, isSingleLike } from \"./utils\";\nimport { XButton, CSS as XButtonCSS } from \"../functional/XButton\";\nimport { getIconScale } from \"../../utils/component\";\nimport { calciteSize48 } from \"@esri/calcite-design-tokens/dist/es6/core.js\";\nimport { Validation } from \"../functional/Validation\";\n\ninterface ItemData {\n  label: string;\n  value: string;\n}\n\nconst isGroup = (el: ComboboxChildElement): el is HTMLCalciteComboboxItemGroupElement =>\n  el.tagName === ComboboxItemGroup;\n\nconst itemUidPrefix = \"combobox-item-\";\nconst chipUidPrefix = \"combobox-chip-\";\nconst labelUidPrefix = \"combobox-label-\";\nconst listboxUidPrefix = \"combobox-listbox-\";\nconst inputUidPrefix = \"combobox-input-\";\n\n/**\n * @slot - A slot for adding `calcite-combobox-item`s.\n */\n@Component({\n  tag: \"calcite-combobox\",\n  styleUrl: \"combobox.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Combobox\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    OpenCloseComponent,\n    FloatingUIComponent,\n    T9nComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the value-clearing will be disabled.\n   */\n  @Prop({ reflect: true }) clearDisabled = false;\n\n  /**\n   * When `selectionMode` is `\"ancestors\"` or `\"multiple\"`, specifies the display of multiple `calcite-combobox-item` selections, where:\n   *\n   * `\"all\"` displays all selections with individual `calcite-chip`s,\n   *\n   * `\"fit\"` displays individual `calcite-chip`s that scale to the component's size, including a non-closable `calcite-chip`, which provides the number of additional `calcite-combobox-item` selections not visually displayed, and\n   *\n   * `\"single\"` displays one `calcite-chip` with the total number of selections.\n   */\n  @Prop({ reflect: true }) selectionDisplay: SelectionDisplay = \"all\";\n\n  /**When `true`, displays and positions the component. */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled) {\n      this.open = false;\n      return;\n    }\n\n    this.setMaxScrollerHeight();\n  }\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the placeholder text for the input. */\n  @Prop() placeholder: string;\n\n  /** Specifies the placeholder icon for the input. */\n  @Prop({ reflect: true }) placeholderIcon: string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) placeholderIconFlipRtl = false;\n\n  /** Specifies the maximum number of `calcite-combobox-item`s (including nested children) to display before displaying a scrollbar. */\n  @Prop({ reflect: true }) maxItems = 0;\n\n  @Watch(\"maxItems\")\n  maxItemsHandler(): void {\n    this.setMaxScrollerHeight();\n  }\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: string | boolean;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, allows entry of custom values, which are not in the original set of items. */\n  @Prop({ reflect: true }) allowCustomValues: boolean;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"ancestors\"` allows multiple selections, but shows ancestors of selected items as selected, with only deepest children shown in chips.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"single\" | \"single-persist\" | \"ancestors\" | \"multiple\",\n    SelectionMode\n  > = \"multiple\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"selectionMode\")\n  @Watch(\"scale\")\n  handlePropsChange(): void {\n    this.updateItems();\n  }\n\n  /** The component's value(s) from the selected `calcite-combobox-item`(s). */\n  @Prop({ mutable: true }) value: string | string[] = null;\n\n  @Watch(\"value\")\n  valueHandler(value: string | string[]): void {\n    if (!this.internalValueChangeFlag) {\n      const items = this.getItems();\n      if (Array.isArray(value)) {\n        items.forEach((item) => (item.selected = value.includes(item.value)));\n      } else if (value) {\n        items.forEach((item) => (item.selected = value === item.value));\n      } else {\n        items.forEach((item) => (item.selected = false));\n      }\n      this.updateItems();\n    }\n  }\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: EffectivePlacement[];\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ComboboxMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ComboboxMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /*  wired up by t9n util */\n  }\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteComboboxItemElement[] = [];\n\n  @Watch(\"selectedItems\")\n  selectedItemsHandler(): void {\n    this.internalValueChangeFlag = true;\n    this.value = this.getValue();\n    this.internalValueChangeFlag = false;\n  }\n\n  /**\n   * Specifies the component's filtered items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredItems: HTMLCalciteComboboxItemElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"click\", { target: \"document\" })\n  documentClickHandler(event: PointerEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    const composedPath = event.composedPath();\n\n    if (composedPath.includes(this.el) || composedPath.includes(this.referenceEl)) {\n      return;\n    }\n\n    if (!this.allowCustomValues && this.textInput.value) {\n      this.clearInputValue();\n      this.filterItems(\"\");\n      this.updateActiveItemIndex(-1);\n    }\n\n    if (this.allowCustomValues && this.text.trim().length) {\n      this.addCustomChip(this.text);\n    }\n\n    this.open = false;\n  }\n\n  @Listen(\"calciteComboboxItemChange\")\n  calciteComboboxItemChangeHandler(event: CustomEvent<HTMLCalciteComboboxItemElement>): void {\n    if (this.ignoreSelectedEventsFlag) {\n      return;\n    }\n\n    const target = event.target as HTMLCalciteComboboxItemElement;\n    const newIndex = this.filteredItems.indexOf(target);\n    this.updateActiveItemIndex(newIndex);\n    this.toggleSelection(target, target.selected);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed Reposition the component after a delay\n   * @returns Promise\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.textInput?.focus();\n    this.activeChipIndex = -1;\n    this.activeItemIndex = -1;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the selected item(s) changes.\n   */\n  @Event({ cancelable: false }) calciteComboboxChange: EventEmitter<void>;\n\n  /** Fires when text is added to filter the options list. */\n  @Event({ cancelable: false }) calciteComboboxFilterChange: EventEmitter<void>;\n\n  /**\n   * Fires when a selected item in the component is closed via its `calcite-chip`.\n   */\n  @Event({ cancelable: false }) calciteComboboxChipClose: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed, and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteComboboxBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteComboboxClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteComboboxBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteComboboxOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    connectLabel(this);\n    connectForm(this);\n\n    this.internalValueChangeFlag = true;\n    this.value = this.getValue();\n    this.internalValueChangeFlag = false;\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n\n    this.updateItems();\n    this.setFilteredPlacements();\n\n    if (this.open) {\n      this.openHandler();\n      onToggleOpenCloseComponent(this);\n    }\n\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.updateItems();\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    afterConnectDefaultValueSet(this, this.getValue());\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    if (this.el.offsetHeight !== this.inputHeight) {\n      this.reposition(true);\n      this.inputHeight = this.el.offsetHeight;\n    }\n\n    updateHostInteraction(this);\n  }\n\n  componentDidUpdate(): void {\n    this.refreshSelectionDisplay();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  private allSelectedIndicatorChipEl: HTMLCalciteChipElement;\n\n  @Element() el: HTMLCalciteComboboxElement;\n\n  placement: LogicalPlacement = defaultMenuPlacement;\n\n  filteredFlipPlacements: EffectivePlacement[];\n\n  internalValueChangeFlag = false;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Combobox[\"value\"];\n\n  @State() items: HTMLCalciteComboboxItemElement[] = [];\n\n  @State() groupItems: HTMLCalciteComboboxItemGroupElement[] = [];\n\n  @State() needsIcon: boolean;\n\n  @State() activeItemIndex = -1;\n\n  @State() activeChipIndex = -1;\n\n  @State() activeDescendant = \"\";\n\n  @State() compactSelectionDisplay = false;\n\n  @State() selectedHiddenChipsCount = 0;\n\n  @State() selectedVisibleChipsCount = 0;\n\n  @State() text = \"\";\n\n  /** when search text is cleared, reset active to  */\n  @Watch(\"text\")\n  textHandler(): void {\n    this.updateActiveItemIndex(-1);\n  }\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ComboboxMessages;\n\n  textInput: HTMLInputElement = null;\n\n  data: ItemData[];\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n\n  private resizeObserver = createObserver(\"resize\", () => {\n    this.setMaxScrollerHeight();\n    this.refreshSelectionDisplay();\n  });\n\n  private guid = guid();\n\n  private inputHeight = 0;\n\n  private floatingEl: HTMLDivElement;\n\n  private referenceEl: HTMLDivElement;\n\n  private chipContainerEl: HTMLDivElement;\n\n  private listContainerEl: HTMLDivElement;\n\n  private ignoreSelectedEventsFlag = false;\n\n  private maxCompactBreakpoint: number;\n\n  openTransitionProp = \"opacity\";\n\n  private selectedIndicatorChipEl: HTMLCalciteChipElement;\n\n  transitionEl: HTMLDivElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private clearValue(): void {\n    this.ignoreSelectedEventsFlag = true;\n    this.items.forEach((el) => (el.selected = false));\n    this.ignoreSelectedEventsFlag = false;\n    this.selectedItems = [];\n    this.emitComboboxChange();\n    this.open = false;\n    this.updateActiveItemIndex(-1);\n    this.resetText();\n    this.filterItems(\"\");\n    this.setFocus();\n  }\n\n  private clearInputValue(): void {\n    this.textInput.value = \"\";\n    this.text = \"\";\n  }\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterComputedPlacements(flipPlacements, el)\n      : null;\n  };\n\n  getValue = (): string | string[] => {\n    const items = this.selectedItems.map((item) => item?.value?.toString());\n    return items?.length ? (items.length > 1 ? items : items[0]) : \"\";\n  };\n\n  onLabelClick = (): void => {\n    this.setFocus();\n  };\n\n  private comboboxInViewport(): boolean {\n    const bounding = this.el.getBoundingClientRect();\n    return (\n      bounding.top >= 0 &&\n      bounding.left >= 0 &&\n      bounding.right <= (window.innerWidth || document.documentElement.clientWidth) &&\n      bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight)\n    );\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    const { key } = event;\n\n    switch (key) {\n      case \"Tab\":\n        this.activeChipIndex = -1;\n        this.activeItemIndex = -1;\n        if (this.allowCustomValues && this.text) {\n          this.addCustomChip(this.text, true);\n          event.preventDefault();\n        } else if (this.open) {\n          this.open = false;\n          event.preventDefault();\n        } else if (!this.allowCustomValues && this.text) {\n          this.clearInputValue();\n          this.filterItems(\"\");\n          this.updateActiveItemIndex(-1);\n        }\n        break;\n      case \"ArrowLeft\":\n        this.previousChip();\n        event.preventDefault();\n        break;\n      case \"ArrowRight\":\n        this.nextChip();\n        event.preventDefault();\n        break;\n      case \"ArrowUp\":\n        event.preventDefault();\n        if (this.open) {\n          this.shiftActiveItemIndex(-1);\n        }\n\n        if (!this.comboboxInViewport()) {\n          this.el.scrollIntoView();\n        }\n        break;\n      case \"ArrowDown\":\n        event.preventDefault();\n        if (this.open) {\n          this.shiftActiveItemIndex(1);\n        } else {\n          this.open = true;\n          this.ensureRecentSelectedItemIsActive();\n        }\n\n        if (!this.comboboxInViewport()) {\n          this.el.scrollIntoView();\n        }\n        break;\n      case \" \":\n        if (!this.textInput.value && !event.defaultPrevented) {\n          if (!this.open) {\n            this.open = true;\n            this.shiftActiveItemIndex(1);\n          }\n          event.preventDefault();\n        }\n        break;\n      case \"Home\":\n        if (!this.open) {\n          return;\n        }\n        event.preventDefault();\n        this.updateActiveItemIndex(0);\n        this.scrollToActiveItem();\n        if (!this.comboboxInViewport()) {\n          this.el.scrollIntoView();\n        }\n        break;\n      case \"End\":\n        if (!this.open) {\n          return;\n        }\n        event.preventDefault();\n        this.updateActiveItemIndex(this.filteredItems.length - 1);\n        this.scrollToActiveItem();\n        if (!this.comboboxInViewport()) {\n          this.el.scrollIntoView();\n        }\n        break;\n      case \"Escape\":\n        if (!this.clearDisabled && !this.open) {\n          this.clearValue();\n        }\n\n        this.open = false;\n        event.preventDefault();\n        break;\n      case \"Enter\":\n        if (this.open && this.activeItemIndex > -1) {\n          this.toggleSelection(this.filteredItems[this.activeItemIndex]);\n          event.preventDefault();\n        } else if (this.activeChipIndex > -1) {\n          this.removeActiveChip();\n          event.preventDefault();\n        } else if (this.allowCustomValues && this.text) {\n          this.addCustomChip(this.text, true);\n          event.preventDefault();\n        } else if (!event.defaultPrevented) {\n          if (submitForm(this)) {\n            event.preventDefault();\n          }\n        }\n        break;\n      case \"Delete\":\n      case \"Backspace\":\n        const notDeletable =\n          this.selectionDisplay === \"single\" ||\n          (this.selectionDisplay === \"fit\" && this.selectedHiddenChipsCount > 0);\n        if (notDeletable) {\n          return;\n        }\n        if (this.activeChipIndex > -1) {\n          event.preventDefault();\n          this.removeActiveChip();\n        } else if (!this.text && this.isMulti()) {\n          event.preventDefault();\n          this.removeLastChip();\n        }\n        break;\n    }\n  };\n\n  private toggleCloseEnd = (): void => {\n    this.open = false;\n    this.el.removeEventListener(\"calciteComboboxClose\", this.toggleCloseEnd);\n  };\n\n  private toggleOpenEnd = (): void => {\n    this.open = false;\n    this.el.removeEventListener(\"calciteComboboxOpen\", this.toggleOpenEnd);\n  };\n\n  onBeforeOpen(): void {\n    this.scrollToActiveItem();\n    this.calciteComboboxBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteComboboxOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteComboboxBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteComboboxClose.emit();\n  }\n\n  setMaxScrollerHeight = async (): Promise<void> => {\n    const { listContainerEl, open, referenceEl } = this;\n\n    if (!listContainerEl || !open) {\n      return;\n    }\n\n    await this.reposition(true);\n    const maxScrollerHeight = this.getMaxScrollerHeight();\n    listContainerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : \"\";\n    listContainerEl.style.minWidth = `${referenceEl.clientWidth}px`;\n    await this.reposition(true);\n  };\n\n  calciteChipCloseHandler = (comboboxItem: HTMLCalciteComboboxItemElement): void => {\n    this.open = false;\n\n    const selection = this.items.find((item) => item === comboboxItem);\n\n    if (selection) {\n      this.toggleSelection(selection, false);\n    }\n\n    this.calciteComboboxChipClose.emit();\n  };\n\n  clickHandler = (event: MouseEvent): void => {\n    const composedPath = event.composedPath();\n\n    if (composedPath.some((node: HTMLElement) => node.tagName === \"CALCITE-CHIP\")) {\n      this.open = false;\n      event.preventDefault();\n      return;\n    }\n\n    if (composedPath.some((node: HTMLElement) => node.classList?.contains(XButtonCSS.button))) {\n      this.clearValue();\n      event.preventDefault();\n      return;\n    }\n\n    this.open = !this.open;\n    this.ensureRecentSelectedItemIsActive();\n  };\n\n  private ensureRecentSelectedItemIsActive(): void {\n    const { selectedItems } = this;\n    const targetIndex =\n      selectedItems.length === 0 ? 0 : this.items.indexOf(selectedItems[selectedItems.length - 1]);\n\n    this.updateActiveItemIndex(targetIndex);\n  }\n\n  private hideChip(chipEl: HTMLCalciteChipElement): void {\n    chipEl.classList.add(CSS.chipInvisible);\n  }\n\n  private showChip(chipEl: HTMLCalciteChipElement): void {\n    chipEl.classList.remove(CSS.chipInvisible);\n  }\n\n  private refreshChipDisplay({\n    chipEls,\n    availableHorizontalChipElSpace,\n    chipContainerElGap,\n  }): void {\n    chipEls.forEach((chipEl: HTMLCalciteChipElement) => {\n      if (!chipEl.selected) {\n        this.hideChip(chipEl);\n      } else {\n        const chipElWidth = getElementWidth(chipEl);\n        if (chipElWidth && chipElWidth < availableHorizontalChipElSpace) {\n          availableHorizontalChipElSpace -= chipElWidth + chipContainerElGap;\n          this.showChip(chipEl);\n          return;\n        }\n      }\n      this.hideChip(chipEl);\n    });\n  }\n\n  private refreshSelectionDisplay = async () => {\n    await componentLoaded(this);\n\n    if (isSingleLike(this.selectionMode)) {\n      return;\n    }\n\n    if (!this.textInput) {\n      return;\n    }\n\n    const {\n      allSelectedIndicatorChipEl,\n      chipContainerEl,\n      selectionDisplay,\n      placeholder,\n      selectedIndicatorChipEl,\n      textInput,\n    } = this;\n\n    const chipContainerElGap = parseInt(getComputedStyle(chipContainerEl).gap.replace(\"px\", \"\"));\n    const chipContainerElWidth = getElementWidth(chipContainerEl);\n    const { fontSize, fontFamily } = getComputedStyle(textInput);\n    const inputTextWidth = getTextWidth(placeholder, `${fontSize} ${fontFamily}`);\n    const inputWidth = (inputTextWidth || parseInt(calciteSize48)) + chipContainerElGap;\n    const allSelectedIndicatorChipElWidth = getElementWidth(allSelectedIndicatorChipEl);\n    const selectedIndicatorChipElWidth = getElementWidth(selectedIndicatorChipEl);\n    const largestSelectedIndicatorChipWidth = Math.max(\n      allSelectedIndicatorChipElWidth,\n      selectedIndicatorChipElWidth,\n    );\n\n    this.setCompactSelectionDisplay({\n      chipContainerElGap,\n      chipContainerElWidth,\n      inputWidth,\n      largestSelectedIndicatorChipWidth,\n    });\n\n    if (selectionDisplay === \"fit\") {\n      const chipEls = Array.from(this.el.shadowRoot.querySelectorAll(\"calcite-chip\")).filter(\n        (chipEl) => chipEl.closable,\n      );\n\n      const availableHorizontalChipElSpace = Math.round(\n        chipContainerElWidth -\n          ((this.selectedHiddenChipsCount > 0 ? selectedIndicatorChipElWidth : 0) +\n            chipContainerElGap +\n            inputWidth +\n            chipContainerElGap),\n      );\n\n      this.refreshChipDisplay({ availableHorizontalChipElSpace, chipContainerElGap, chipEls });\n      this.setVisibleAndHiddenChips(chipEls);\n    }\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  private setCompactSelectionDisplay({\n    chipContainerElGap,\n    chipContainerElWidth,\n    inputWidth,\n    largestSelectedIndicatorChipWidth,\n  }): void {\n    const newCompactBreakpoint = Math.round(\n      largestSelectedIndicatorChipWidth + chipContainerElGap + inputWidth,\n    );\n    if (!this.maxCompactBreakpoint || this.maxCompactBreakpoint < newCompactBreakpoint) {\n      this.maxCompactBreakpoint = newCompactBreakpoint;\n    }\n    this.compactSelectionDisplay = chipContainerElWidth < this.maxCompactBreakpoint;\n  }\n\n  setContainerEl = (el: HTMLDivElement): void => {\n    this.resizeObserver.observe(el);\n    this.listContainerEl = el;\n    this.transitionEl = el;\n  };\n\n  setChipContainerEl = (el: HTMLDivElement): void => {\n    this.resizeObserver.observe(el);\n    this.chipContainerEl = el;\n  };\n\n  setReferenceEl = (el: HTMLDivElement): void => {\n    this.referenceEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  setAllSelectedIndicatorChipEl = (el: HTMLCalciteChipElement): void => {\n    this.allSelectedIndicatorChipEl = el;\n  };\n\n  setSelectedIndicatorChipEl = (el: HTMLCalciteChipElement): void => {\n    this.selectedIndicatorChipEl = el;\n  };\n\n  private setVisibleAndHiddenChips(chipEls: HTMLCalciteChipElement[]): void {\n    let newSelectedVisibleChipsCount = 0;\n    chipEls.forEach((chipEl) => {\n      if (chipEl.selected && !chipEl.classList.contains(CSS.chipInvisible)) {\n        newSelectedVisibleChipsCount++;\n      }\n    });\n    if (newSelectedVisibleChipsCount !== this.selectedVisibleChipsCount) {\n      this.selectedVisibleChipsCount = newSelectedVisibleChipsCount;\n    }\n    const newSelectedHiddenChipsCount =\n      this.getSelectedItems().length - newSelectedVisibleChipsCount;\n    if (newSelectedHiddenChipsCount !== this.selectedHiddenChipsCount) {\n      this.selectedHiddenChipsCount = newSelectedHiddenChipsCount;\n    }\n  }\n\n  private getMaxScrollerHeight(): number {\n    const items = this.getItemsAndGroups().filter((item) => !item.hidden);\n\n    const { maxItems } = this;\n\n    let itemsToProcess = 0;\n    let maxScrollerHeight = 0;\n\n    if (items.length > maxItems) {\n      items.forEach((item) => {\n        if (itemsToProcess < maxItems && maxItems > 0) {\n          const height = this.calculateSingleItemHeight(item);\n          if (height > 0) {\n            maxScrollerHeight += height;\n            itemsToProcess++;\n          }\n        }\n      });\n    }\n\n    return maxScrollerHeight;\n  }\n\n  private calculateSingleItemHeight(item: ComboboxChildElement): number {\n    if (!item) {\n      return;\n    }\n\n    let height = item.offsetHeight;\n    // if item has children items, don't count their height twice\n    const children = Array.from(item.querySelectorAll<ComboboxChildElement>(ComboboxChildSelector));\n    children\n      .map((child) => child?.offsetHeight)\n      .forEach((offsetHeight) => {\n        height -= offsetHeight;\n      });\n    return height;\n  }\n\n  inputHandler = (event: Event): void => {\n    const value = (event.target as HTMLInputElement).value;\n    this.text = value;\n    this.filterItems(value);\n    if (value) {\n      this.activeChipIndex = -1;\n    }\n  };\n\n  getItemsAndGroups(): ComboboxChildElement[] {\n    return [...this.groupItems, ...this.items];\n  }\n\n  private filterItems = (() => {\n    const find = (item: ComboboxChildElement, filteredData: ItemData[]) =>\n      item &&\n      filteredData.some(({ label, value }) =>\n        isGroup(item) ? label === item.label : value === item.value && label === item.textLabel,\n      );\n\n    return debounce((text: string): void => {\n      const filteredData = filter(this.data, text);\n      const itemsAndGroups = this.getItemsAndGroups();\n\n      itemsAndGroups.forEach((item) => {\n        const hidden = !find(item, filteredData);\n        item.hidden = hidden;\n        const [parent, grandparent] = item.ancestors;\n\n        if (find(parent, filteredData) || find(grandparent, filteredData)) {\n          item.hidden = false;\n        }\n\n        if (!hidden) {\n          item.ancestors.forEach((ancestor) => (ancestor.hidden = false));\n        }\n      });\n\n      this.filteredItems = this.getFilteredItems();\n      this.calciteComboboxFilterChange.emit();\n    }, 100);\n  })();\n\n  internalComboboxChangeEvent = (): void => {\n    this.calciteComboboxChange.emit();\n  };\n\n  private emitComboboxChange = debounce(this.internalComboboxChangeEvent, 0);\n\n  toggleSelection(item: HTMLCalciteComboboxItemElement, value = !item.selected): void {\n    if (\n      !item ||\n      (this.selectionMode === \"single-persist\" && item.selected && item.value === this.value)\n    ) {\n      return;\n    }\n\n    if (this.isMulti()) {\n      item.selected = value;\n      this.updateAncestors(item);\n      this.selectedItems = this.getSelectedItems();\n      this.emitComboboxChange();\n      this.resetText();\n      this.filterItems(\"\");\n    } else {\n      this.ignoreSelectedEventsFlag = true;\n      this.items.forEach((el) => (el.selected = el === item ? value : false));\n      this.ignoreSelectedEventsFlag = false;\n      this.selectedItems = this.getSelectedItems();\n      this.emitComboboxChange();\n\n      if (this.textInput) {\n        this.textInput.value = item.textLabel;\n      }\n      this.open = false;\n      this.updateActiveItemIndex(-1);\n      this.resetText();\n      this.filterItems(\"\");\n    }\n  }\n\n  updateAncestors(item: HTMLCalciteComboboxItemElement): void {\n    if (this.selectionMode !== \"ancestors\") {\n      return;\n    }\n    const ancestors = getItemAncestors(item);\n    const children = getItemChildren(item);\n    if (item.selected) {\n      ancestors.forEach((el) => {\n        (el as HTMLCalciteComboboxItemElement).selected = true;\n      });\n    } else {\n      children.forEach((el) => (el.selected = false));\n      [...ancestors].forEach((el) => {\n        if (!hasActiveChildren(el)) {\n          el.selected = false;\n        }\n      });\n    }\n  }\n\n  getFilteredItems(): HTMLCalciteComboboxItemElement[] {\n    return this.items.filter((item) => !item.hidden);\n  }\n\n  private getSelectedItems = (): HTMLCalciteComboboxItemElement[] => {\n    if (!this.isMulti()) {\n      const match = this.items.find(({ selected }) => selected);\n      return match ? [match] : [];\n    }\n\n    return (\n      this.items\n        .filter(\n          (item) =>\n            item.selected && (this.selectionMode !== \"ancestors\" || !hasActiveChildren(item)),\n        )\n        /** Preserve order of entered tags */\n        .sort((a, b) => {\n          const aIdx = this.selectedItems.indexOf(a);\n          const bIdx = this.selectedItems.indexOf(b);\n          if (aIdx > -1 && bIdx > -1) {\n            return aIdx - bIdx;\n          }\n          return bIdx - aIdx;\n        })\n    );\n  };\n\n  private updateItems = (): void => {\n    this.items = this.getItems();\n    this.groupItems = this.getGroupItems();\n    this.data = this.getData();\n    this.selectedItems = this.getSelectedItems();\n    this.filteredItems = this.getFilteredItems();\n    this.needsIcon = this.getNeedsIcon();\n\n    this.items.forEach((item) => {\n      item.selectionMode = this.selectionMode;\n      item.scale = this.scale;\n    });\n\n    if (!this.allowCustomValues) {\n      this.setMaxScrollerHeight();\n    }\n\n    this.groupItems.forEach((groupItem, index, items) => {\n      if (index === 0) {\n        groupItem.afterEmptyGroup = false;\n      }\n\n      const nextGroupItem = items[index + 1];\n\n      if (nextGroupItem) {\n        nextGroupItem.afterEmptyGroup = groupItem.children.length === 0;\n      }\n    });\n  };\n\n  getData(): ItemData[] {\n    return this.items.map((item) => ({\n      filterDisabled: item.filterDisabled,\n      value: item.value,\n      label: item.textLabel,\n    }));\n  }\n\n  getNeedsIcon(): boolean {\n    return isSingleLike(this.selectionMode) && this.items.some((item) => item.icon);\n  }\n\n  resetText(): void {\n    if (this.textInput) {\n      this.textInput.value = \"\";\n    }\n    this.text = \"\";\n  }\n\n  getItems(): HTMLCalciteComboboxItemElement[] {\n    const items: HTMLCalciteComboboxItemElement[] = Array.from(\n      this.el.querySelectorAll(ComboboxItem),\n    );\n    return items.filter((item) => !item.disabled);\n  }\n\n  getGroupItems(): HTMLCalciteComboboxItemGroupElement[] {\n    return Array.from(this.el.querySelectorAll(ComboboxItemGroup));\n  }\n\n  addCustomChip(value: string, focus?: boolean): void {\n    const existingItem = this.items.find((el) => el.textLabel === value);\n    if (existingItem) {\n      this.toggleSelection(existingItem, true);\n    } else {\n      if (!this.isMulti()) {\n        this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);\n      }\n      const item = document.createElement(\"calcite-combobox-item\");\n      item.value = value;\n      item.textLabel = value;\n      item.selected = true;\n      this.el.appendChild(item);\n      this.resetText();\n      if (focus) {\n        this.setFocus();\n      }\n      this.updateItems();\n      this.filterItems(\"\");\n      this.emitComboboxChange();\n    }\n  }\n\n  removeActiveChip(): void {\n    this.toggleSelection(this.selectedItems[this.activeChipIndex], false);\n    this.setFocus();\n  }\n\n  removeLastChip(): void {\n    this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);\n    this.setFocus();\n  }\n\n  previousChip(): void {\n    if (this.text) {\n      return;\n    }\n    const length = this.selectedItems.length - 1;\n    const active = this.activeChipIndex;\n    this.activeChipIndex = active === -1 ? length : Math.max(active - 1, 0);\n    this.updateActiveItemIndex(-1);\n    this.focusChip();\n  }\n\n  nextChip(): void {\n    if (this.text || this.activeChipIndex === -1) {\n      return;\n    }\n    const last = this.selectedItems.length - 1;\n    const newIndex = this.activeChipIndex + 1;\n    if (newIndex > last) {\n      this.activeChipIndex = -1;\n      this.setFocus();\n    } else {\n      this.activeChipIndex = newIndex;\n      this.focusChip();\n    }\n    this.updateActiveItemIndex(-1);\n  }\n\n  focusChip(): void {\n    const guid = this.selectedItems[this.activeChipIndex]?.guid;\n\n    const chip = guid\n      ? this.referenceEl.querySelector<HTMLCalciteChipElement>(`#${chipUidPrefix}${guid}`)\n      : null;\n    chip?.setFocus();\n  }\n\n  private scrollToActiveItem = (): void => {\n    const activeItem = this.filteredItems[this.activeItemIndex];\n\n    if (!activeItem) {\n      return;\n    }\n\n    const height = this.calculateSingleItemHeight(activeItem);\n    const { offsetHeight, scrollTop } = this.listContainerEl;\n    if (offsetHeight + scrollTop < activeItem.offsetTop + height) {\n      this.listContainerEl.scrollTop = activeItem.offsetTop - offsetHeight + height;\n    } else if (activeItem.offsetTop < scrollTop) {\n      this.listContainerEl.scrollTop = activeItem.offsetTop;\n    }\n  };\n\n  shiftActiveItemIndex(delta: number): void {\n    const { length } = this.filteredItems;\n    const newIndex = (this.activeItemIndex + length + delta) % length;\n    this.updateActiveItemIndex(newIndex);\n    this.scrollToActiveItem();\n  }\n\n  updateActiveItemIndex(index: number): void {\n    this.activeItemIndex = index;\n    let activeDescendant: string = null;\n    this.filteredItems.forEach((el, i) => {\n      if (i === index) {\n        el.active = true;\n        activeDescendant = `${itemUidPrefix}${el.guid}`;\n      } else {\n        el.active = false;\n      }\n    });\n    this.activeDescendant = activeDescendant;\n    if (this.activeItemIndex > -1) {\n      this.activeChipIndex = -1;\n    }\n  }\n\n  private isAllSelected(): boolean {\n    return this.getItems().length === this.getSelectedItems().length;\n  }\n\n  isMulti(): boolean {\n    return !isSingleLike(this.selectionMode);\n  }\n\n  comboboxFocusHandler = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.textInput?.focus();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChips(): VNode[] {\n    const { activeChipIndex, scale, selectionMode, messages } = this;\n    return this.selectedItems.map((item, i) => {\n      const chipClasses = {\n        chip: true,\n        \"chip--active\": activeChipIndex === i,\n      };\n      const ancestors = [...getItemAncestors(item)].reverse();\n      const pathLabel = [...ancestors, item].map((el) => el.textLabel);\n      const label = selectionMode !== \"ancestors\" ? item.textLabel : pathLabel.join(\" / \");\n      return (\n        <calcite-chip\n          class={chipClasses}\n          closable\n          icon={item.icon}\n          iconFlipRtl={item.iconFlipRtl}\n          id={item.guid ? `${chipUidPrefix}${item.guid}` : null}\n          key={item.textLabel}\n          messageOverrides={{ dismissLabel: messages.removeTag }}\n          onCalciteChipClose={() => this.calciteChipCloseHandler(item)}\n          scale={scale}\n          selected={item.selected}\n          title={label}\n          value={item.value}\n        >\n          {label}\n        </calcite-chip>\n      );\n    });\n  }\n\n  renderAllSelectedIndicatorChip(): VNode {\n    const {\n      compactSelectionDisplay,\n      scale,\n      selectedVisibleChipsCount,\n      setAllSelectedIndicatorChipEl,\n    } = this;\n    const label = this.messages.allSelected;\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: !(\n            this.isAllSelected() &&\n            !selectedVisibleChipsCount &&\n            !compactSelectionDisplay\n          ),\n        }}\n        scale={scale}\n        title={label}\n        value=\"\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={setAllSelectedIndicatorChipEl}\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  renderAllSelectedIndicatorChipCompact(): VNode {\n    const { compactSelectionDisplay, scale, selectedVisibleChipsCount } = this;\n    const label = this.messages.all || \"All\";\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: !(\n            this.isAllSelected() &&\n            !selectedVisibleChipsCount &&\n            compactSelectionDisplay\n          ),\n        }}\n        scale={scale}\n        title={label}\n        value=\"\"\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  renderSelectedIndicatorChip(): VNode {\n    const {\n      compactSelectionDisplay,\n      selectionDisplay,\n      getSelectedItems,\n      scale,\n      selectedHiddenChipsCount,\n      selectedVisibleChipsCount,\n      setSelectedIndicatorChipEl,\n    } = this;\n    let chipInvisible: boolean;\n    let label: string;\n\n    if (compactSelectionDisplay) {\n      chipInvisible = true;\n    } else {\n      if (selectionDisplay === \"single\") {\n        const selectedItemsCount = getSelectedItems().length;\n        if (this.isAllSelected()) {\n          chipInvisible = true;\n        } else if (selectedItemsCount > 0) {\n          chipInvisible = false;\n        } else {\n          chipInvisible = true;\n        }\n        label = `${selectedItemsCount} ${this.messages.selected}`;\n      } else if (selectionDisplay === \"fit\") {\n        chipInvisible = !!(\n          (this.isAllSelected() && selectedVisibleChipsCount === 0) ||\n          selectedHiddenChipsCount === 0\n        );\n        label =\n          selectedVisibleChipsCount > 0\n            ? `+${selectedHiddenChipsCount}`\n            : `${selectedHiddenChipsCount} ${this.messages.selected}`;\n      }\n    }\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: chipInvisible,\n        }}\n        scale={scale}\n        title={label}\n        value=\"\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={setSelectedIndicatorChipEl}\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  renderSelectedIndicatorChipCompact(): VNode {\n    const {\n      compactSelectionDisplay,\n      selectionDisplay,\n      getSelectedItems,\n      scale,\n      selectedHiddenChipsCount,\n    } = this;\n    let chipInvisible: boolean;\n    let label: string;\n\n    if (compactSelectionDisplay) {\n      const selectedItemsCount = getSelectedItems().length;\n      if (this.isAllSelected()) {\n        chipInvisible = true;\n      } else if (selectionDisplay === \"fit\") {\n        chipInvisible = !(selectedHiddenChipsCount > 0);\n        label = `${selectedHiddenChipsCount || 0}`;\n      } else if (selectionDisplay === \"single\") {\n        chipInvisible = !(selectedItemsCount > 0);\n        label = `${selectedItemsCount}`;\n      }\n    } else {\n      chipInvisible = true;\n    }\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: chipInvisible,\n        }}\n        scale={scale}\n        title={label}\n        value=\"\"\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  private get showingInlineIcon(): boolean {\n    const { placeholderIcon, selectionMode, selectedItems, open } = this;\n    const selectedItem = selectedItems[0];\n    const selectedIcon = selectedItem?.icon;\n    const singleSelectionMode = isSingleLike(selectionMode);\n\n    return !open && selectedItem\n      ? !!selectedIcon && singleSelectionMode\n      : !!placeholderIcon && (!selectedItem || singleSelectionMode);\n  }\n\n  private renderInput(): VNode {\n    const { guid, disabled, placeholder, selectionMode, selectedItems, open } = this;\n    const single = isSingleLike(selectionMode);\n    const selectedItem = selectedItems[0];\n    const showLabel = !open && single && !!selectedItem;\n\n    return (\n      <span\n        class={{\n          \"input-wrap\": true,\n          \"input-wrap--single\": single,\n        }}\n      >\n        {showLabel && (\n          <span\n            class={{\n              label: true,\n              \"label--icon\": !!selectedItem?.icon,\n            }}\n            key=\"label\"\n          >\n            {selectedItem.textLabel}\n          </span>\n        )}\n        <input\n          aria-activedescendant={this.activeDescendant}\n          aria-autocomplete=\"list\"\n          aria-controls={`${listboxUidPrefix}${guid}`}\n          aria-label={getLabelText(this)}\n          class={{\n            input: true,\n            \"input--single\": true,\n            \"input--transparent\": this.activeChipIndex > -1,\n            \"input--hidden\": showLabel,\n            \"input--icon\": this.showingInlineIcon && !!this.placeholderIcon,\n          }}\n          disabled={disabled}\n          id={`${inputUidPrefix}${guid}`}\n          key=\"input\"\n          onFocus={this.comboboxFocusHandler}\n          onInput={this.inputHandler}\n          placeholder={placeholder}\n          type=\"text\"\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(el) => (this.textInput = el as HTMLInputElement)}\n        />\n      </span>\n    );\n  }\n\n  renderListBoxOptions(): VNode[] {\n    return this.filteredItems.map((item) => (\n      <li\n        aria-selected={toAriaBoolean(item.selected)}\n        id={item.guid ? `${itemUidPrefix}${item.guid}` : null}\n        role=\"option\"\n        tabindex=\"-1\"\n      >\n        {item.textLabel}\n      </li>\n    ));\n  }\n\n  renderFloatingUIContainer(): VNode {\n    const { setFloatingEl, setContainerEl, open } = this;\n    const classes = {\n      [CSS.listContainer]: true,\n      [FloatingCSS.animation]: true,\n      [FloatingCSS.animationActive]: open,\n    };\n\n    return (\n      <div\n        aria-hidden=\"true\"\n        class={{\n          \"floating-ui-container\": true,\n          \"floating-ui-container--active\": open,\n        }}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={setFloatingEl}\n      >\n        <div\n          class={classes}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={setContainerEl}\n        >\n          <ul class={{ list: true, \"list--hide\": !open }}>\n            <slot />\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  renderSelectedOrPlaceholderIcon(): VNode {\n    const { selectedItems, placeholderIcon, placeholderIconFlipRtl } = this;\n    const selectedItem = selectedItems[0];\n    const selectedIcon = selectedItem?.icon;\n\n    return (\n      this.showingInlineIcon && (\n        <span class=\"icon-start\" key=\"selected-placeholder-icon\">\n          <calcite-icon\n            class=\"selected-icon\"\n            flipRtl={this.open && selectedItem ? selectedItem.iconFlipRtl : placeholderIconFlipRtl}\n            icon={!this.open && selectedItem ? selectedIcon : placeholderIcon}\n            scale={getIconScale(this.scale)}\n          />\n        </span>\n      )\n    );\n  }\n\n  renderChevronIcon(): VNode {\n    const { open } = this;\n    return (\n      <span class=\"icon-end\" key=\"chevron\">\n        <calcite-icon\n          icon={open ? \"chevron-up\" : \"chevron-down\"}\n          scale={getIconScale(this.scale)}\n        />\n      </span>\n    );\n  }\n\n  render(): VNode {\n    const { selectionDisplay, guid, label, open } = this;\n    const singleSelectionMode = isSingleLike(this.selectionMode);\n    const allSelectionDisplay = selectionDisplay === \"all\";\n    const singleSelectionDisplay = selectionDisplay === \"single\";\n    const fitSelectionDisplay = !singleSelectionMode && selectionDisplay === \"fit\";\n    const isClearable = !this.clearDisabled && this.value?.length > 0;\n    return (\n      <Host onClick={this.comboboxFocusHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-autocomplete=\"list\"\n            aria-controls={`${listboxUidPrefix}${guid}`}\n            aria-expanded={toAriaBoolean(open)}\n            aria-haspopup=\"listbox\"\n            aria-label={getLabelText(this)}\n            aria-live=\"polite\"\n            aria-owns={`${listboxUidPrefix}${guid}`}\n            class={{\n              wrapper: true,\n              \"wrapper--single\": singleSelectionMode || !this.selectedItems.length,\n              \"wrapper--active\": open,\n            }}\n            onClick={this.clickHandler}\n            onKeyDown={this.keyDownHandler}\n            role=\"combobox\"\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.setReferenceEl}\n          >\n            {this.renderSelectedOrPlaceholderIcon()}\n            <div\n              class={{\n                \"grid-input\": true,\n                [CSS.selectionDisplayFit]: fitSelectionDisplay,\n                [CSS.selectionDisplaySingle]: singleSelectionDisplay,\n              }}\n              key=\"grid\"\n              ref={this.setChipContainerEl}\n            >\n              {!singleSelectionMode && !singleSelectionDisplay && this.renderChips()}\n              {!singleSelectionMode &&\n                !allSelectionDisplay && [\n                  this.renderSelectedIndicatorChip(),\n                  this.renderSelectedIndicatorChipCompact(),\n                  this.renderAllSelectedIndicatorChip(),\n                  this.renderAllSelectedIndicatorChipCompact(),\n                ]}\n              <label\n                class=\"screen-readers-only\"\n                htmlFor={`${inputUidPrefix}${guid}`}\n                id={`${labelUidPrefix}${guid}`}\n              >\n                {label}\n              </label>\n              {this.renderInput()}\n            </div>\n            {isClearable ? (\n              <XButton\n                disabled={this.disabled}\n                key=\"close-button\"\n                label={this.messages.clear}\n                scale={this.scale}\n              />\n            ) : null}\n            {this.renderChevronIcon()}\n          </div>\n          <ul\n            aria-labelledby={`${labelUidPrefix}${guid}`}\n            aria-multiselectable=\"true\"\n            class=\"screen-readers-only\"\n            id={`${listboxUidPrefix}${guid}`}\n            role=\"listbox\"\n            tabIndex={-1}\n          >\n            {this.renderListBoxOptions()}\n          </ul>\n          {this.renderFloatingUIContainer()}\n          <HiddenFormInputSlot component={this} />\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","export const CSS = {\n  icon: \"icon\",\n  iconActive: \"icon--active\",\n  iconIndent: \"icon--indent\",\n  custom: \"icon--custom\",\n  dot: \"icon--dot\",\n  single: \"label--single\",\n  label: \"label\",\n  active: \"label--active\",\n  selected: \"label--selected\",\n  title: \"title\",\n  textContainer: \"text-container\",\n};\n","@include base-component();\n\n.scale--s {\n  @apply text-n2h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.1\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.2\");\n  --calcite-combobox-item-selector-icon-size: theme(\"spacing.4\");\n}\n\n.scale--m {\n  @apply text-n1h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.3\");\n  --calcite-combobox-item-selector-icon-size: theme(\"spacing.4\");\n}\n\n.scale--l {\n  @apply text-0h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.4\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing[2.5]\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.4\");\n  --calcite-combobox-item-selector-icon-size: theme(\"spacing.6\");\n}\n\n.container {\n  --calcite-combobox-item-indent-value: calc(\n    var(--calcite-combobox-item-spacing-indent) * var(--calcite-combobox-item-spacing-indent-multiplier)\n  );\n}\n\n:host(:focus) {\n  @apply shadow-none;\n}\n\n@include disabled();\n\n:host,\nul {\n  @apply m-0 flex flex-col p-0;\n}\n\n:host(:focus),\nul:focus {\n  @apply outline-none;\n}\n\n.label {\n  @apply text-color-3\n    focus-base\n    relative\n    box-border\n    flex\n    w-full\n    min-w-full\n    cursor-pointer\n    items-center\n    no-underline\n    duration-150\n    ease-in-out;\n  @include word-break();\n  padding-block: var(--calcite-combobox-item-spacing-unit-s);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n:host([disabled]) .label {\n  @apply cursor-default;\n}\n\n// selected state\n.label--selected {\n  @apply text-color-1 font-medium;\n}\n\n.label--active {\n  @apply focus-inset;\n}\n\n.label:hover,\n.label:active {\n  @apply text-color-1\n    bg-foreground-2\n    no-underline\n    shadow-none;\n}\n\n.title {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.icon {\n  @apply inline-flex\n    opacity-0\n    duration-150\n    ease-in-out;\n  color: theme(\"borderColor.color.1\");\n}\n\n.icon--indent {\n  padding-inline-start: var(--calcite-combobox-item-indent-value);\n}\n\n.icon--custom {\n  margin-block-start: -1px;\n  padding-inline-start: var(--calcite-combobox-item-spacing-unit-l);\n  @apply text-color-3;\n}\n\n.icon--active {\n  @apply text-color-1;\n}\n\n.icon--dot {\n  @apply flex justify-center;\n  min-inline-size: var(--calcite-combobox-item-selector-icon-size);\n}\n\n.icon--dot:before {\n  text-align: start;\n  content: \"\\2022\";\n}\n\n.label--active .icon {\n  @apply opacity-100;\n}\n\n.label--selected .icon {\n  @apply opacity-100;\n  color: theme(\"backgroundColor.brand\");\n}\n\n:host(:hover[disabled]) .icon {\n  @apply opacity-100;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { ComboboxChildElement } from \"../combobox/interfaces\";\nimport { getAncestors, getDepth, isSingleLike } from \"../combobox/utils\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport { getIconScale } from \"../../utils/component\";\n\n/**\n * @slot - A slot for adding nested `calcite-combobox-item`s.\n */\n@Component({\n  tag: \"calcite-combobox-item\",\n  styleUrl: \"combobox-item.scss\",\n  shadow: true,\n})\nexport class ComboboxItem implements ConditionalSlotComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /** When `true`, the component is active. */\n  @Prop({ reflect: true }) active = false;\n\n  /** Specifies the parent and grandparent items, which are set on `calcite-combobox`. */\n  @Prop({ mutable: true }) ancestors: ComboboxChildElement[];\n\n  /** The `id` attribute of the component. When omitted, a globally unique identifier is used. */\n  @Prop({ reflect: true }) guid = guid();\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  @Watch(\"selected\")\n  selectedWatchHandler(): void {\n    this.calciteComboboxItemChange.emit();\n  }\n\n  /** The component's text. */\n  @Prop({ reflect: true }) textLabel!: string;\n\n  /** The component's value. */\n  @Prop() value!: any;\n\n  /**\n   * When `true`, omits the component from the `calcite-combobox` filtered search results.\n   */\n  @Prop({ reflect: true }) filterDisabled: boolean;\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"ancestors\"` allows multiple selections, but shows ancestors of selected items as selected, with only deepest children shown in chips.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"single\" | \"single-persist\" | \"ancestors\" | \"multiple\",\n    SelectionMode\n  > = \"multiple\";\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-combobox`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteComboboxItemElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.ancestors = getAncestors(this.el);\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteComboboxItemChange: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  toggleSelected(): Promise<void> {\n    const isSinglePersistSelect = this.selectionMode === \"single-persist\";\n\n    if (this.disabled || (isSinglePersistSelect && this.selected)) {\n      return;\n    }\n\n    this.selected = !this.selected;\n  }\n\n  private itemClickHandler = (): void => {\n    this.toggleSelected();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderIcon(iconPath: string): VNode {\n    return this.icon ? (\n      <calcite-icon\n        class={{\n          [CSS.custom]: !!this.icon,\n          [CSS.iconActive]: this.icon && this.selected,\n          [CSS.iconIndent]: true,\n        }}\n        flipRtl={this.iconFlipRtl}\n        icon={this.icon || iconPath}\n        key=\"icon\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n  }\n\n  renderSelectIndicator(showDot: boolean, iconPath: string): VNode {\n    return showDot ? (\n      <span\n        class={{\n          [CSS.icon]: true,\n          [CSS.dot]: true,\n          [CSS.iconIndent]: true,\n        }}\n      />\n    ) : (\n      <calcite-icon\n        class={{\n          [CSS.icon]: true,\n          [CSS.iconActive]: this.selected,\n          [CSS.iconIndent]: true,\n        }}\n        flipRtl={this.iconFlipRtl}\n        icon={iconPath}\n        key=\"indicator\"\n        scale={getIconScale(this.scale)}\n      />\n    );\n  }\n\n  renderChildren(): VNode {\n    if (getSlotted(this.el)) {\n      return (\n        <ul key=\"default-slot-container\">\n          <slot />\n        </ul>\n      );\n    }\n\n    return null;\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n    const isSingleSelect = isSingleLike(this.selectionMode);\n    const showDot = isSingleSelect && !disabled;\n    const defaultIcon = isSingleSelect ? \"dot\" : \"check\";\n    const iconPath = disabled ? \"\" : defaultIcon;\n\n    const classes = {\n      [CSS.label]: true,\n      [CSS.selected]: this.selected,\n      [CSS.active]: this.active,\n      [CSS.single]: isSingleSelect,\n    };\n    const depth = getDepth(this.el);\n\n    return (\n      <Host aria-hidden=\"true\">\n        <InteractiveContainer disabled={disabled}>\n          <div\n            class={`container scale--${this.scale}`}\n            style={{ \"--calcite-combobox-item-spacing-indent-multiplier\": `${depth}` }}\n          >\n            <li class={classes} id={this.guid} onClick={this.itemClickHandler}>\n              {this.renderSelectIndicator(showDot, iconPath)}\n              {this.renderIcon(iconPath)}\n              <span class=\"title\">{this.textLabel}</span>\n            </li>\n            {this.renderChildren()}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","export const CSS = {\n  list: \"list\",\n  label: \"label\",\n  title: \"title\",\n};\n",".scale--s {\n  @apply text-n2h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.1\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.2\");\n}\n\n.scale--m {\n  @apply text-n1h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.3\");\n}\n\n.scale--l {\n  @apply text-0h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.4\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.4\");\n}\n\n:host,\n.list {\n  @apply m-0 flex flex-col p-0;\n}\n\n:host(:focus),\n.list:focus {\n  @apply outline-none;\n}\n\n.label {\n  @apply text-color-3 box-border flex w-full min-w-0 max-w-full;\n}\n\n.title {\n  --calcite-combobox-item-indent-value: calc(\n    var(--calcite-combobox-item-spacing-indent) * var(--calcite-combobox-item-spacing-indent-multiplier)\n  );\n  border: 0 solid;\n  @apply border-b-color-3\n    text-color-2\n    word-break\n    block\n    flex-1\n    border-b\n    font-bold;\n  padding-block: var(--calcite-combobox-item-spacing-unit-l);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-s);\n  margin-inline-start: var(--calcite-combobox-item-indent-value);\n}\n\n::slotted(calcite-combobox-item-group:not([after-empty-group])) {\n  padding-block-start: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n@include base-component();\n","import { Component, Element, h, Prop, VNode } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { ComboboxChildElement } from \"../combobox/interfaces\";\nimport { getAncestors, getDepth } from \"../combobox/utils\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-combobox-item`s.\n */\n@Component({\n  tag: \"calcite-combobox-item-group\",\n  styleUrl: \"combobox-item-group.scss\",\n  shadow: true,\n})\nexport class ComboboxItemGroup {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, signifies that the group comes after another group without any children (items or sub-groups), otherwise indicates that the group comes after another group that has children. Used for styling.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) afterEmptyGroup = false;\n\n  /** Specifies the parent and grandparent `calcite-combobox-item`s, which are set on `calcite-combobox`. */\n  @Prop({ mutable: true }) ancestors: ComboboxChildElement[];\n\n  /** Specifies the title of the component. */\n  @Prop() label!: string;\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-combobox`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.ancestors = getAncestors(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteComboboxItemGroupElement;\n\n  guid: string = guid();\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { el, scale } = this;\n    const depth = getDepth(el);\n\n    return (\n      <ul\n        aria-labelledby={this.guid}\n        class={{ [CSS.list]: true, [`scale--${scale}`]: true }}\n        role=\"group\"\n      >\n        <li\n          class={{ [CSS.label]: true }}\n          id={this.guid}\n          role=\"presentation\"\n          style={{ \"--calcite-combobox-item-spacing-indent-multiplier\": `${depth}` }}\n        >\n          <span class={CSS.title}>{this.label}</span>\n        </li>\n        <slot />\n      </ul>\n    );\n  }\n}\n"],"mappings":"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"}