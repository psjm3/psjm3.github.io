/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.7.1
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-6469e98a.js');
const interactive = require('./interactive-a2b73062.js');
require('./browser-bd0cc8a3.js');

const CSS = {
    container: "container",
};

const tileGroupCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{box-sizing:border-box;display:inline-block}:host ::slotted(calcite-tile){margin-block-end:var(--calcite-spacing-px);margin-inline-end:var(--calcite-spacing-px)}.container{display:grid;grid-auto-rows:minmax(auto, 1fr)}:host([scale=s]) .container{grid-template-columns:repeat(auto-fit, minmax(100px, 1fr))}:host([scale=m]) .container{grid-template-columns:repeat(auto-fit, minmax(140px, 1fr))}:host([scale=l]) .container{grid-template-columns:repeat(auto-fit, minmax(160px, 1fr))}:host([layout=vertical]) .container{display:flex;flex-direction:column}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([hidden]){display:none}[hidden]{display:none}";

const TileGroup = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        //--------------------------------------------------------------------------
        //
        //  Private Methods
        //
        //--------------------------------------------------------------------------
        this.updateTiles = () => {
            this.el.querySelectorAll("calcite-tile").forEach((item) => (item.scale = this.scale));
        };
        this.disabled = false;
        this.layout = "horizontal";
        this.scale = "m";
    }
    scaleWatcher() {
        this.updateTiles();
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    connectedCallback() {
        interactive.connectInteractive(this);
        this.updateTiles();
    }
    componentDidRender() {
        interactive.updateHostInteraction(this);
    }
    disconnectedCallback() {
        interactive.disconnectInteractive(this);
    }
    render() {
        return (index.h(interactive.InteractiveContainer, { disabled: this.disabled }, index.h("div", { class: CSS.container }, index.h("slot", { onSlotchange: this.updateTiles }))));
    }
    get el() { return index.getElement(this); }
    static get watchers() { return {
        "scale": ["scaleWatcher"]
    }; }
};
TileGroup.style = tileGroupCss;

exports.calcite_tile_group = TileGroup;

//# sourceMappingURL=calcite-tile-group.cjs.entry.js.map